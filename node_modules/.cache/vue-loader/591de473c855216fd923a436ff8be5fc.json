{"remainingRequest":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/FarmerDisplay.vue?vue&type=style&index=0&id=86f7be18&scoped=true&lang=css","dependencies":[{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/FarmerDisplay.vue","mtime":1661609826000},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/css-loader/dist/cjs.js","mtime":1663235635608},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1663235636100},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/postcss-loader/src/index.js","mtime":1663235635931},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js","mtime":1663235615568},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/vue-loader-v16/dist/index.js","mtime":1663235636100}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mb250IHsKICBmb250LXN0eWxlOiBub3JtYWw7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBmb250LXNpemU6IDM2cHg7CiAgbGluZS1oZWlnaHQ6IDQzcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGNvbG9yOiAjQTA3RDNFOwp9Cg=="},{"version":3,"sources":["/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/FarmerDisplay.vue"],"names":[],"mappings":";AAoHA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/FarmerDisplay.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"nes-container with-title text-white text-xl\">\n    <!-- <p class=\"text-white  flex justify-center text-6xl\"> Staking </p> -->\n    <!-- <div class=\"mb-2\">\n      state:\n      <p class=\"inline-block \">\n        {{ parseFarmerState(farmerAcc) }}\n      </p>\n    </div> -->\n    <div class=\"flex justify-between mt-10\">\n      <div>\n        <div class=\"flex justify-center\">\n          <h1 class=\"text-base\">Wallet Address</h1>\n        </div>\n        <div class=\"font\">{{ farmerAcc.identity.toBase58().slice(0, 4) + \"....\" +\n            farmerAcc.identity.toBase58().slice(-4)\n        }}</div>\n      </div>\n      <div>\n        <div class=\"flex justify-center text-base\">\n          Soveregin Staked\n        </div>\n        <div class=\"font\">{{ farmerAcc.gemsStaked }}</div>\n\n      </div>\n      <div>\n        <div class=\"flex-1 mr-5 text-blue-500\">\n          <FarmerRewardDisplay :key=\"farmerAcc.rewardA\" :farmReward=\"farmAcc.rewardA\" :reward=\"farmerAcc.rewardA\"\n            title=\"Reward A\" />\n        </div>\n      </div>\n\n\n    </div>\n    <!-- <div class=\"mb-2\">Associated vault: {{ farmerAcc.vault.toBase58() }}</div> -->\n    <!-- <div class=\"mb-2\">Soveregin staked: {{ farmerAcc.gemsStaked }}</div> -->\n    <!-- <div class=\"mb-2\">\n      Min staking ends: {{ parseDate(farmerAcc.minStakingEndsTs) }}\n    </div>\n    <div class=\"mb-5\">\n      Cooldown ends: {{ parseDate(farmerAcc.cooldownEndsTs) }}\n    </div> -->\n\n    <div class=\"flex mb-5\">\n      <!-- <div class=\"flex-1 mr-5 text-blue-500\">\n        <FarmerRewardDisplay :key=\"farmerAcc.rewardA\" :farmReward=\"farmAcc.rewardA\" :reward=\"farmerAcc.rewardA\"\n          title=\"Reward A\" />\n      </div> -->\n      <!-- <div class=\"flex-1\">\n        <FarmerRewardDisplay :key=\"farmerAcc.rewardB\" :farmReward=\"farmAcc.rewardB\" :reward=\"farmerAcc.rewardB\"\n          title=\"Reward B\" />\n      </div> -->\n    </div>\n    <button class=\"button-style nes-btn is-primary mb-5\" @click=\"refreshFarmer\">\n      Refresh account\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, watch } from 'vue';\nimport FarmerRewardDisplay from '@/components/gem-farm/FarmerRewardDisplay.vue';\nimport useWallet from '@/composables/wallet';\nimport useCluster from '@/composables/cluster';\nimport { initGemFarm } from '@/common/gem-farm';\nimport { PublicKey } from '@solana/web3.js';\nimport { parseDate } from '@/common/util';\n\nexport default defineComponent({\n  components: { FarmerRewardDisplay },\n  props: {\n    farm: String,\n    farmAcc: Object,\n    farmer: String,\n    farmerAcc: Object,\n  },\n  emits: ['refresh-farmer'],\n  setup(props, ctx) {\n    const { wallet, getWallet } = useWallet();\n    const { cluster, getConnection } = useCluster();\n\n    let gf: any;\n    watch([wallet, cluster], async () => {\n      gf = await initGemFarm(getConnection(), getWallet()!);\n    });\n    //need an onmounted hook because this component isn't yet mounted when wallet/cluster are set\n    onMounted(async () => {\n      if (getWallet() && getConnection()) {\n        gf = await initGemFarm(getConnection(), getWallet()!);\n      }\n    });\n\n    // --------------------------------------- display farmer\n    // todo ideally should be using one from client, but n/a during render\n    const parseFarmerState = (farmer: any): string => {\n      return Object.keys(farmer.state)[0];\n    };\n\n    const refreshFarmer = async () => {\n      await gf.refreshFarmerWallet(\n        new PublicKey(props.farm!),\n        new PublicKey(props.farmer!)\n      );\n      ctx.emit('refresh-farmer');\n    };\n\n    return {\n      refreshFarmer,\n      parseFarmerState,\n      parseDate,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.font {\n  font-style: normal;\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 43px;\n  text-align: center;\n  color: #A07D3E;\n}\n</style>\n"]}]}