{"remainingRequest":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/babel-loader/lib/index.js!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/ts-loader/index.js??ref--14-2!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/composables/cluster.ts","dependencies":[{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/composables/cluster.ts","mtime":1668764319248},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/babel.config.js","mtime":1661228910000},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js","mtime":1663235615568},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/babel-loader/lib/index.js","mtime":1663235615501},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/ts-loader/index.js","mtime":1663235630214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3lhZ25pay12YWRhZG9yaXlhL0Rlc2t0b3AvR2VtLUZhcm0tMTctMjAyMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdWJzdHIuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCB7IHJlYWRvbmx5LCByZWYgfSBmcm9tICd2dWUnOwppbXBvcnQgeyBDb25uZWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IHZhciBDbHVzdGVyOwoKKGZ1bmN0aW9uIChDbHVzdGVyKSB7CiAgLy8gRGV2bmV0ID0gJ2Rldm5ldCcsCiAgQ2x1c3RlclsiTWFpbm5ldCJdID0gIm1haW5uZXQiOyAvLyBUZXN0bmV0ID0gJ3Rlc3RuZXQnLAogIC8vIExvY2FsbmV0ID0gJ2xvY2FsbmV0JywKfSkoQ2x1c3RlciB8fCAoQ2x1c3RlciA9IHt9KSk7Cgp2YXIgY2x1c3RlclVSTE1hcHBpbmcgPSB7CiAgLy8gZGV2bmV0OiBwcm9jZXNzLmVudi5WVUVfQVBQX0RFVk5FVF9VUkwgfHwgJ2h0dHBzOi8vYXBpLmRldm5ldC5zb2xhbmEuY29tJywKICBtYWlubmV0OiBwcm9jZXNzLmVudi5WVUVfQVBQX01BSU5ORVRfVVJMIHx8ICdodHRwczovL2FwaS5tYWlubmV0LWJldGEuc29sYW5hLmNvbScKfTsKY29uc29sZS5sb2coIvCfmoAgfiBjbHVzdGVyVVJMTWFwcGluZyIsIGNsdXN0ZXJVUkxNYXBwaW5nKTsKdmFyIGNsdXN0ZXIgPSByZWYoQ2x1c3Rlci5NYWlubmV0KTsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlQ2x1c3RlcigpIHsKICB2YXIgZ2V0Q2x1c3RlclVSTCA9IGZ1bmN0aW9uIGdldENsdXN0ZXJVUkwoKSB7CiAgICByZXR1cm4gY2x1c3RlclVSTE1hcHBpbmdbY2x1c3Rlci52YWx1ZV07CiAgfTsKCiAgdmFyIGdldFRva2VuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0dFTkdPX0FVVEgpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnNlbnQuZGF0YS5hY2Nlc3NfdG9rZW4pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKTsKCiAgdmFyIGdldENvbm5lY3Rpb24gPSBmdW5jdGlvbiBnZXRDb25uZWN0aW9uKGNvbW1pdG1lbnQpIHsKICAgIHJldHVybiBuZXcgQ29ubmVjdGlvbihnZXRDbHVzdGVyVVJMKCksIHsKICAgICAgY29tbWl0bWVudDogY29tbWl0bWVudCAhPT0gbnVsbCAmJiBjb21taXRtZW50ICE9PSB2b2lkIDAgPyBjb21taXRtZW50IDogJ3Byb2Nlc3NlZCcKICAgIH0pOwogIH07CgogIHZhciBzZXRDbHVzdGVyID0gZnVuY3Rpb24gc2V0Q2x1c3RlcihuZXdDbHVzdGVyKSB7CiAgICBjbHVzdGVyLnZhbHVlID0gbmV3Q2x1c3RlcjsgLy8gY2FwcGluZyBhdCAxMCBjaGFycyBkdWUgdG8gc2VjdXJpdHkgKG5vdCB0byBleHBvc2UgdGhlIHRva2VuKQoKICAgIGNvbnNvbGUubG9nKCJDbHVzdGVyIHVwZGF0ZWQsIG5vdyAiLmNvbmNhdChuZXdDbHVzdGVyLCAiICgiKS5jb25jYXQoZ2V0Q2x1c3RlclVSTCgpLnN1YnN0cigwLCAxMCksICIpIikpOwogIH07CgogIHJldHVybiB7CiAgICBjbHVzdGVyOiByZWFkb25seShjbHVzdGVyKSwKICAgIGdldENsdXN0ZXJVUkw6IGdldENsdXN0ZXJVUkwsCiAgICBnZXRDb25uZWN0aW9uOiBnZXRDb25uZWN0aW9uLAogICAgc2V0Q2x1c3Rlcjogc2V0Q2x1c3RlcgogIH07Cn0="},{"version":3,"sources":["/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/composables/cluster.ts"],"names":[],"mappings":";;;;AAAA,SAAS,QAAT,EAAmB,GAAnB,QAA8B,KAA9B;AACA,SAAqB,UAArB,QAAuC,iBAAvC;AAEA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAA,IAAY,OAAZ;;AAAA,CAAA,UAAY,OAAZ,EAAmB;EACjB;EACA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAA,CAFiB,CAGjB;EACA;AACD,CALD,EAAY,OAAO,KAAP,OAAO,GAAA,EAAA,CAAnB;;AAOA,IAAM,iBAAiB,GAAG;EACxB;EACA,OAAO,EACL,OAAO,CAAC,GAAR,CAAY,mBAAZ,IAAmC;AAHb,CAA1B;AAOA,OAAO,CAAC,GAAR,CAAY,wBAAZ,EAAsC,iBAAtC;AAEA,IAAM,OAAO,GAAG,GAAG,CAAU,OAAO,CAAC,OAAlB,CAAnB;AAEA,eAAc,SAAU,UAAV,GAAoB;EAChC,IAAM,aAAa,GAAG,SAAhB,aAAgB;IAAA,OAAc,iBAAiB,CAAC,OAAO,CAAC,KAAT,CAA/B;EAAA,CAAtB;;EAEA,IAAM,QAAQ;IAAA,mEAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAER,KAAK,CAAC,GAAN,CAAU,OAAO,CAAC,GAAR,CAAY,kBAAtB,CAFQ;;YAAA;cAAA,+CAEmC,IAFnC,CAEwC,YAFxC;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAR,QAAQ;MAAA;IAAA;EAAA,GAAd;;EAIA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,UAAD;IAAA,OACpB,IAAI,UAAJ,CAAe,aAAa,EAA5B,EAAgC;MAC9B,UAAU,EAAE,UAAF,aAAE,UAAF,cAAE,UAAF,GAAgB;IADI,CAAhC,CADoB;EAAA,CAAtB;;EASA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,UAAD,EAAwB;IACzC,OAAO,CAAC,KAAR,GAAgB,UAAhB,CADyC,CAEzC;;IACA,OAAO,CAAC,GAAR,gCAC0B,UAD1B,eACyC,aAAa,GAAG,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,CADzC;EAGD,CAND;;EAQA,OAAO;IACL,OAAO,EAAE,QAAQ,CAAC,OAAD,CADZ;IAEL,aAAa,EAAb,aAFK;IAGL,aAAa,EAAb,aAHK;IAIL,UAAU,EAAV;EAJK,CAAP;AAMD","sourcesContent":["import { readonly, ref } from 'vue';\nimport { Commitment, Connection } from '@solana/web3.js';\nimport { tokenAuthFetchMiddleware } from '@strata-foundation/web3-token-auth';\nimport axios from 'axios';\n\nexport enum Cluster {\n  // Devnet = 'devnet',\n  Mainnet = 'mainnet',\n  // Testnet = 'testnet',\n  // Localnet = 'localnet',\n}\n\nconst clusterURLMapping = {\n  // devnet: process.env.VUE_APP_DEVNET_URL || 'https://api.devnet.solana.com',\n  mainnet:\n    process.env.VUE_APP_MAINNET_URL || 'https://api.mainnet-beta.solana.com',\n  // testnet: process.env.VUE_APP_TESTNET_URL || 'https://api.testnet.solana.com',\n  // localnet: process.env.VUE_APP_LOCALNET_URL || 'http://localhost:8899',\n};\nconsole.log(\"ðŸš€ ~ clusterURLMapping\", clusterURLMapping)\n\nconst cluster = ref<Cluster>(Cluster.Mainnet);\n\nexport default function useCluster() {\n  const getClusterURL = (): string => clusterURLMapping[cluster.value];\n\n  const getToken = async (): Promise<string> =>\n    // @ts-ignore\n    (await axios.get(process.env.VUE_APP_GENGO_AUTH)).data.access_token;\n\n  const getConnection = (commitment?: Commitment): Connection =>\n    new Connection(getClusterURL(), {\n      commitment: commitment ?? 'processed',\n      // fetchMiddleware: tokenAuthFetchMiddleware({\n      //   // tokenExpiry: 0,\n      //   getToken,\n      // }),\n    });\n\n  const setCluster = (newCluster: Cluster) => {\n    cluster.value = newCluster;\n    // capping at 10 chars due to security (not to expose the token)\n    console.log(\n      `Cluster updated, now ${newCluster} (${getClusterURL().substr(0, 10)})`\n    );\n  };\n\n  return {\n    cluster: readonly(cluster),\n    getClusterURL,\n    getConnection,\n    setCluster,\n  };\n}\n"],"sourceRoot":""}]}