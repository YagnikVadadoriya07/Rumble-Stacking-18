{"remainingRequest":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/babel-loader/lib/index.js!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/ts-loader/index.js??ref--14-2!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/composables/wallet.ts","dependencies":[{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/composables/wallet.ts","mtime":1661228910000},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/babel.config.js","mtime":1661228910000},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js","mtime":1663235615568},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/babel-loader/lib/index.js","mtime":1663235615501},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/ts-loader/index.js","mtime":1663235630214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YnN0ci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgeyBjb21wdXRlZCwgcmVhZG9ubHksIHJlZiwgc2hhbGxvd1JlZiB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IGdldFBoYW50b21XYWxsZXQsIGdldFNvbGZsYXJlV2FsbGV0LCBnZXRTb2xmbGFyZVdlYldhbGxldCwgZ2V0U29sbGV0RXh0ZW5zaW9uV2FsbGV0LCBnZXRTb2xsZXRXYWxsZXQgfSBmcm9tICdAc29sYW5hL3dhbGxldC1hZGFwdGVyLXdhbGxldHMnOwp2YXIgd2FsbGV0Q2xhc3MgPSByZWYobnVsbCk7CnZhciB3YWxsZXRBZGFwdGVyID0gcmVmKHNoYWxsb3dSZWYobnVsbCkpOwp2YXIgd2FsbGV0TWFwcGluZyA9IHsKICBQaGFudG9tOiBnZXRQaGFudG9tV2FsbGV0LAogIFNvbGxldDogZ2V0U29sbGV0V2FsbGV0LAogICdTb2xsZXQgKEV4dGVuc2lvbiknOiBnZXRTb2xsZXRFeHRlbnNpb25XYWxsZXQsCiAgU29sZmxhcmU6IGdldFNvbGZsYXJlV2FsbGV0LAogICdTb2xmbGFyZSAoV2ViKSc6IGdldFNvbGZsYXJlV2ViV2FsbGV0Cn07CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVdhbGxldCgpIHsKICB2YXIgaXNDb25uZWN0ZWQgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gISF3YWxsZXRBZGFwdGVyLnZhbHVlOwogIH0pOwoKICB2YXIgZ2V0V2FsbGV0ID0gZnVuY3Rpb24gZ2V0V2FsbGV0KCkgewogICAgaWYgKHdhbGxldEFkYXB0ZXIudmFsdWUpIHsKICAgICAgcmV0dXJuIHdhbGxldEFkYXB0ZXIudmFsdWU7CiAgICB9CgogICAgcmV0dXJuIG51bGw7CiAgfTsKCiAgdmFyIHNldFdhbGxldCA9IGZ1bmN0aW9uIHNldFdhbGxldChuZXdXYWxsZXQsIG5ldHdvcmspIHsKICAgIGNvbnNvbGUubG9nKCdhdHRlbXB0aW5nIHRvIHNldCB3YWxsZXQnLCBuZXdXYWxsZXQsIG5ldHdvcmsuc3Vic3RyKDAsIDIwKSk7CgogICAgaWYgKCFuZXdXYWxsZXQpIHsKICAgICAgY29uc29sZS5sb2coJ3JlbW92aW5nIGFjdGl2ZSB3YWxsZXQnKTsKICAgICAgd2FsbGV0Q2xhc3MudmFsdWUgPSBudWxsOwogICAgICB3YWxsZXRBZGFwdGVyLnZhbHVlID0gbnVsbDsgLy8gZG9uJ3QgdGhpbmsgSSBuZWVkIHNoYWxsb3dSZWYgaGVyZQoKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHZhciBnb3R0ZW5XYWxsZXQgPSB3YWxsZXRNYXBwaW5nW25ld1dhbGxldF0oewogICAgICBuZXR3b3JrOiBuZXR3b3JrCiAgICB9KTsKICAgIHZhciBjb25uZWN0ZWRBZGFwdGVyID0gZ290dGVuV2FsbGV0LmFkYXB0ZXIoKTsKICAgIGNvbm5lY3RlZEFkYXB0ZXIuY29ubmVjdCgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAvLyBvbmx5IHNldCB0aGUgdHdvIGlmIHRoZSBjYWxsIHN1Y2NlZWRzCiAgICAgIHdhbGxldENsYXNzLnZhbHVlID0gZ290dGVuV2FsbGV0OwogICAgICB3YWxsZXRBZGFwdGVyLnZhbHVlID0gY29ubmVjdGVkQWRhcHRlcjsKICAgICAgY29uc29sZS5sb2coJ3dhbGxldCBzdWNjZXNzZnVsbHkgY29ubmVjdGVkJywgbmV3V2FsbGV0LCBuZXR3b3JrLnN1YnN0cigwLCAyMCkpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZygnb2ggbm8sIGZhaWxlZCB0byBjb25uZWN0IHRvIHdhbGxldCwgdHJ5IGFnYWluJyk7CiAgICAgIHdhbGxldENsYXNzLnZhbHVlID0gbnVsbDsKICAgICAgd2FsbGV0QWRhcHRlci52YWx1ZSA9IG51bGw7CiAgICB9KTsKICB9OwoKICB2YXIgZ2V0V2FsbGV0TmFtZSA9IGZ1bmN0aW9uIGdldFdhbGxldE5hbWUoKSB7CiAgICBpZiAod2FsbGV0Q2xhc3MudmFsdWUpIHsKICAgICAgcmV0dXJuIHdhbGxldENsYXNzLnZhbHVlLm5hbWU7CiAgICB9CgogICAgcmV0dXJuIG51bGw7CiAgfTsKCiAgdmFyIGdldFdhbGxldEFkZHJlc3MgPSBmdW5jdGlvbiBnZXRXYWxsZXRBZGRyZXNzKCkgewogICAgaWYgKHdhbGxldEFkYXB0ZXIudmFsdWUpIHsKICAgICAgcmV0dXJuIHdhbGxldEFkYXB0ZXIudmFsdWUucHVibGljS2V5OwogICAgfQoKICAgIHJldHVybiBudWxsOwogIH07CgogIHJldHVybiB7CiAgICB3YWxsZXQ6IHJlYWRvbmx5KHdhbGxldEFkYXB0ZXIpLAogICAgaXNDb25uZWN0ZWQ6IGlzQ29ubmVjdGVkLAogICAgZ2V0V2FsbGV0OiBnZXRXYWxsZXQsCiAgICBzZXRXYWxsZXQ6IHNldFdhbGxldCwKICAgIGdldFdhbGxldE5hbWU6IGdldFdhbGxldE5hbWUsCiAgICBnZXRXYWxsZXRBZGRyZXNzOiBnZXRXYWxsZXRBZGRyZXNzCiAgfTsKfQ=="},{"version":3,"sources":["/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/composables/wallet.ts"],"names":[],"mappings":";;AAAA,SAAS,QAAT,EAAmB,QAAnB,EAA6B,GAA7B,EAAkC,UAAlC,QAAyD,KAAzD;AACA,SACE,gBADF,EAEE,iBAFF,EAGE,oBAHF,EAIE,wBAJF,EAKE,eALF,QAQO,gCARP;AAYA,IAAM,WAAW,GAAG,GAAG,CAAgB,IAAhB,CAAvB;AACA,IAAM,aAAa,GAAG,GAAG,CAAkC,UAAU,CAAC,IAAD,CAA5C,CAAzB;AAEA,IAAM,aAAa,GAAG;EACpB,OAAO,EAAE,gBADW;EAEpB,MAAM,EAAE,eAFY;EAGpB,sBAAsB,wBAHF;EAIpB,QAAQ,EAAE,iBAJU;EAKpB,kBAAkB;AALE,CAAtB;AAQA,eAAc,SAAU,SAAV,GAAmB;EAC/B,IAAM,WAAW,GAAG,QAAQ,CAAC;IAAA,OAAM,CAAC,CAAC,aAAa,CAAC,KAAtB;EAAA,CAAD,CAA5B;;EAEA,IAAM,SAAS,GAAG,SAAZ,SAAY,GAAiC;IACjD,IAAI,aAAa,CAAC,KAAlB,EAAyB;MACvB,OAAO,aAAa,CAAC,KAArB;IACD;;IACD,OAAO,IAAP;EACD,CALD;;EAOA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,SAAD,EAA2B,OAA3B,EAA8C;IAC9D,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,SAAxC,EAAmD,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,EAAlB,CAAnD;;IAEA,IAAI,CAAC,SAAL,EAAgB;MACd,OAAO,CAAC,GAAR,CAAY,wBAAZ;MACA,WAAW,CAAC,KAAZ,GAAoB,IAApB;MACA,aAAa,CAAC,KAAd,GAAsB,IAAtB,CAHc,CAGc;;MAC5B;IACD;;IAED,IAAM,YAAY,GAAI,aAAqB,CAAC,SAAD,CAArB,CAAkC;MAAE,OAAO,EAAP;IAAF,CAAlC,CAAtB;IACA,IAAM,gBAAgB,GAAG,YAAY,CAAC,OAAb,EAAzB;IACA,gBAAgB,CACb,OADH,GAEG,IAFH,CAEQ,YAAK;MACT;MACA,WAAW,CAAC,KAAZ,GAAoB,YAApB;MACA,aAAa,CAAC,KAAd,GAAsB,gBAAtB;MACA,OAAO,CAAC,GAAR,CACE,+BADF,EAEE,SAFF,EAGE,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,EAAlB,CAHF;IAKD,CAXH,WAYS,YAAK;MACV,OAAO,CAAC,GAAR,CAAY,+CAAZ;MACA,WAAW,CAAC,KAAZ,GAAoB,IAApB;MACA,aAAa,CAAC,KAAd,GAAsB,IAAtB;IACD,CAhBH;EAiBD,CA7BD;;EA+BA,IAAM,aAAa,GAAG,SAAhB,aAAgB,GAAwB;IAC5C,IAAI,WAAW,CAAC,KAAhB,EAAuB;MACrB,OAAO,WAAW,CAAC,KAAZ,CAAkB,IAAzB;IACD;;IACD,OAAO,IAAP;EACD,CALD;;EAOA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAuB;IAC9C,IAAI,aAAa,CAAC,KAAlB,EAAyB;MACvB,OAAO,aAAa,CAAC,KAAd,CAAoB,SAA3B;IACD;;IACD,OAAO,IAAP;EACD,CALD;;EAOA,OAAO;IACL,MAAM,EAAE,QAAQ,CAAC,aAAD,CADX;IAEL,WAAW,EAAX,WAFK;IAGL,SAAS,EAAT,SAHK;IAIL,SAAS,EAAT,SAJK;IAKL,aAAa,EAAb,aALK;IAML,gBAAgB,EAAhB;EANK,CAAP;AAQD","sourcesContent":["import { computed, readonly, ref, shallowRef, Ref } from 'vue';\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolflareWebWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  Wallet,\n  WalletName,\n} from '@solana/wallet-adapter-wallets';\nimport { PublicKey } from '@solana/web3.js';\nimport { SignerWalletAdapter } from '@solana/wallet-adapter-base';\n\nconst walletClass = ref<Wallet | null>(null);\nconst walletAdapter = ref<Ref<SignerWalletAdapter | null>>(shallowRef(null));\n\nconst walletMapping = {\n  Phantom: getPhantomWallet,\n  Sollet: getSolletWallet,\n  'Sollet (Extension)': getSolletExtensionWallet,\n  Solflare: getSolflareWallet,\n  'Solflare (Web)': getSolflareWebWallet,\n};\n\nexport default function useWallet() {\n  const isConnected = computed(() => !!walletAdapter.value);\n\n  const getWallet = (): SignerWalletAdapter | null => {\n    if (walletAdapter.value) {\n      return walletAdapter.value;\n    }\n    return null;\n  };\n\n  const setWallet = (newWallet: string | null, network: string) => {\n    console.log('attempting to set wallet', newWallet, network.substr(0, 20));\n\n    if (!newWallet) {\n      console.log('removing active wallet');\n      walletClass.value = null;\n      walletAdapter.value = null; // don't think I need shallowRef here\n      return;\n    }\n\n    const gottenWallet = (walletMapping as any)[newWallet!]({ network });\n    const connectedAdapter = gottenWallet.adapter();\n    connectedAdapter\n      .connect()\n      .then(() => {\n        // only set the two if the call succeeds\n        walletClass.value = gottenWallet;\n        walletAdapter.value = connectedAdapter;\n        console.log(\n          'wallet successfully connected',\n          newWallet,\n          network.substr(0, 20)\n        );\n      })\n      .catch(() => {\n        console.log('oh no, failed to connect to wallet, try again');\n        walletClass.value = null;\n        walletAdapter.value = null;\n      });\n  };\n\n  const getWalletName = (): WalletName | null => {\n    if (walletClass.value) {\n      return walletClass.value.name;\n    }\n    return null;\n  };\n\n  const getWalletAddress = (): PublicKey | null => {\n    if (walletAdapter.value) {\n      return walletAdapter.value.publicKey;\n    }\n    return null;\n  };\n\n  return {\n    wallet: readonly(walletAdapter),\n    isConnected,\n    getWallet,\n    setWallet,\n    getWalletName,\n    getWalletAddress,\n  };\n}\n"],"sourceRoot":""}]}