{"remainingRequest":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/babel-loader/lib/index.js!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/ts-loader/index.js??ref--14-2!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/UpdateFarm.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/UpdateFarm.vue","mtime":1661228910000},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/babel.config.js","mtime":1661228910000},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js","mtime":1663235615568},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/babel-loader/lib/index.js","mtime":1663235615501},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/ts-loader/index.js","mtime":1663235630214},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js","mtime":1663235615568},{"path":"/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/vue-loader-v16/dist/index.js","mtime":1663235636100}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3lhZ25pay12YWRhZG9yaXlhL0Rlc2t0b3AvR2VtLUZhcm0tMTctMjAyMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCBvbk1vdW50ZWQsIHJlZiwgd2F0Y2ggfSBmcm9tICd2dWUnOwppbXBvcnQgdXNlV2FsbGV0IGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL3dhbGxldCc7CmltcG9ydCB1c2VDbHVzdGVyIGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL2NsdXN0ZXInOwppbXBvcnQgeyBpbml0R2VtRmFybSB9IGZyb20gJy4uLy4uL2NvbW1vbi9nZW0tZmFybSc7CmltcG9ydCB7IFB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7CmltcG9ydCB7IEJOIH0gZnJvbSAnQHByb2plY3Qtc2VydW0vYW5jaG9yJzsKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBwcm9wczogewogICAgZmFybTogU3RyaW5nCiAgfSwKICBlbWl0czogWyd1cGRhdGUtZmFybSddLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgY3R4KSB7CiAgICB2YXIgX3VzZVdhbGxldCA9IHVzZVdhbGxldCgpLAogICAgICAgIHdhbGxldCA9IF91c2VXYWxsZXQud2FsbGV0LAogICAgICAgIGdldFdhbGxldCA9IF91c2VXYWxsZXQuZ2V0V2FsbGV0OwoKICAgIHZhciBfdXNlQ2x1c3RlciA9IHVzZUNsdXN0ZXIoKSwKICAgICAgICBjbHVzdGVyID0gX3VzZUNsdXN0ZXIuY2x1c3RlciwKICAgICAgICBnZXRDb25uZWN0aW9uID0gX3VzZUNsdXN0ZXIuZ2V0Q29ubmVjdGlvbjsKCiAgICB2YXIgZ2Y7CiAgICB3YXRjaChbd2FsbGV0LCBjbHVzdGVyXSwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBpbml0R2VtRmFybShnZXRDb25uZWN0aW9uKCksIGdldFdhbGxldCgpKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBnZiA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKTsgLy9uZWVkZWQgY296IG1vdW50cyBsYXRlcgoKICAgIG9uTW91bnRlZCggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCEoZ2V0V2FsbGV0KCkgJiYgZ2V0Q29ubmVjdGlvbigpKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGluaXRHZW1GYXJtKGdldENvbm5lY3Rpb24oKSwgZ2V0V2FsbGV0KCkpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGdmID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkpOyAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gdXBkYXRlIGZhcm0KCiAgICB2YXIgbWFuYWdlciA9IHJlZigpOwogICAgdmFyIG1pblN0YWtpbmdQZXJpb2RTZWMgPSByZWYoKTsKICAgIHZhciBjb29sZG93blBlcmlvZFNlYyA9IHJlZigpOwogICAgdmFyIHVuc3Rha2luZ0ZlZUxhbXAgPSByZWYoKTsKCiAgICB2YXIgdXBkYXRlRmFybSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIG5ld0NvbmZpZzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKG1pblN0YWtpbmdQZXJpb2RTZWMudmFsdWUgfHwgY29vbGRvd25QZXJpb2RTZWMudmFsdWUgfHwgdW5zdGFraW5nRmVlTGFtcC52YWx1ZSkgewogICAgICAgICAgICAgICAgICBuZXdDb25maWcgPSB7CiAgICAgICAgICAgICAgICAgICAgbWluU3Rha2luZ1BlcmlvZFNlYzogbmV3IEJOKG1pblN0YWtpbmdQZXJpb2RTZWMudmFsdWUpLAogICAgICAgICAgICAgICAgICAgIGNvb2xkb3duUGVyaW9kU2VjOiBuZXcgQk4oY29vbGRvd25QZXJpb2RTZWMudmFsdWUpLAogICAgICAgICAgICAgICAgICAgIHVuc3Rha2luZ0ZlZUxhbXA6IG5ldyBCTih1bnN0YWtpbmdGZWVMYW1wLnZhbHVlKQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBnZi51cGRhdGVGYXJtV2FsbGV0KG5ldyBQdWJsaWNLZXkocHJvcHMuZmFybSksIG5ld0NvbmZpZywgbWFuYWdlci52YWx1ZSA/IG5ldyBQdWJsaWNLZXkobWFuYWdlci52YWx1ZSkgOiB1bmRlZmluZWQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBjdHguZW1pdCgndXBkYXRlLWZhcm0nKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZUZhcm0oKSB7CiAgICAgICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7CgogICAgcmV0dXJuIHsKICAgICAgbWFuYWdlcjogbWFuYWdlciwKICAgICAgbWluU3Rha2luZ1BlcmlvZFNlYzogbWluU3Rha2luZ1BlcmlvZFNlYywKICAgICAgY29vbGRvd25QZXJpb2RTZWM6IGNvb2xkb3duUGVyaW9kU2VjLAogICAgICB1bnN0YWtpbmdGZWVMYW1wOiB1bnN0YWtpbmdGZWVMYW1wLAogICAgICB1cGRhdGVGYXJtOiB1cGRhdGVGYXJtCiAgICB9OwogIH0KfSk7"},{"version":3,"sources":["/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/yagnik-vadadoriya/Desktop/Gem-Farm-17-2022/src/components/gem-farm/UpdateFarm.vue?vue&type=script&lang=ts"],"names":[],"mappings":";;AACA,SAAS,eAAT,EAA0B,SAA1B,EAAqC,GAArC,EAA0C,KAA1C,QAAuD,KAAvD;AACA,OAAO,SAAP,MAAsB,0BAAtB;AACA,OAAO,UAAP,MAAuB,2BAAvB;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAAS,SAAT,QAA0B,iBAA1B;AACA,SAAS,EAAT,QAAmB,uBAAnB;AAEA,eAAe,eAAe,CAAC;EAC7B,KAAK,EAAE;IACL,IAAI,EAAE;EADD,CADsB;EAI7B,KAAK,EAAE,CAAC,aAAD,CAJsB;EAK7B,KAL6B,iBAKvB,KALuB,EAKhB,GALgB,EAKb;IACd,iBAA8B,SAAS,EAAvC;IAAA,IAAQ,MAAR,cAAQ,MAAR;IAAA,IAAgB,SAAhB,cAAgB,SAAhB;;IACA,kBAAmC,UAAU,EAA7C;IAAA,IAAQ,OAAR,eAAQ,OAAR;IAAA,IAAiB,aAAjB,eAAiB,aAAjB;;IAEA,IAAI,EAAJ;IACA,KAAK,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,uEAAoB;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACZ,WAAW,CAAC,aAAa,EAAd,EAAkB,SAAS,EAA3B,CADC;;YAAA;cACvB,EADuB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAApB,GAAL,CALc,CASd;;IACA,SAAS,uEAAC;MAAA;QAAA;UAAA;YAAA;cAAA,MACJ,SAAS,MAAM,aAAa,EADxB;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAEK,WAAW,CAAC,aAAa,EAAd,EAAkB,SAAS,EAA3B,CAFhB;;YAAA;cAEN,EAFM;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD,GAAT,CAVc,CAgBd;;IACA,IAAM,OAAO,GAAG,GAAG,EAAnB;IACA,IAAM,mBAAmB,GAAG,GAAG,EAA/B;IACA,IAAM,iBAAiB,GAAG,GAAG,EAA7B;IACA,IAAM,gBAAgB,GAAG,GAAG,EAA5B;;IAEA,IAAM,UAAU;MAAA,oEAAG;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEjB,IACE,mBAAmB,CAAC,KAApB,IACA,iBAAiB,CAAC,KADlB,IAEA,gBAAgB,CAAC,KAHnB,EAIE;kBACA,SAAS,GAAG;oBACV,mBAAmB,EAAE,IAAI,EAAJ,CAAO,mBAAmB,CAAC,KAA3B,CADX;oBAEV,iBAAiB,EAAE,IAAI,EAAJ,CAAO,iBAAiB,CAAC,KAAzB,CAFT;oBAGV,gBAAgB,EAAE,IAAI,EAAJ,CAAO,gBAAgB,CAAC,KAAxB;kBAHR,CAAZ;gBAKD;;gBAZgB;gBAAA,OAcX,EAAE,CAAC,gBAAH,CACJ,IAAI,SAAJ,CAAc,KAAK,CAAC,IAApB,CADI,EAEJ,SAFI,EAGJ,OAAO,CAAC,KAAR,GAAgB,IAAI,SAAJ,CAAc,OAAO,CAAC,KAAtB,CAAhB,GAA+C,SAH3C,CAdW;;cAAA;gBAmBjB,GAAG,CAAC,IAAJ,CAAS,aAAT;;cAnBiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAV,UAAU;QAAA;MAAA;IAAA,GAAhB;;IAsBA,OAAO;MACL,OAAO,EAAP,OADK;MAEL,mBAAmB,EAAnB,mBAFK;MAGL,iBAAiB,EAAjB,iBAHK;MAIL,gBAAgB,EAAhB,gBAJK;MAKL,UAAU,EAAV;IALK,CAAP;EAOD;AAxD4B,CAAD,CAA9B","sourcesContent":["\nimport { defineComponent, onMounted, ref, watch } from 'vue';\nimport useWallet from '../../composables/wallet';\nimport useCluster from '../../composables/cluster';\nimport { initGemFarm } from '../../common/gem-farm';\nimport { PublicKey } from '@solana/web3.js';\nimport { BN } from '@project-serum/anchor';\n\nexport default defineComponent({\n  props: {\n    farm: String,\n  },\n  emits: ['update-farm'],\n  setup(props, ctx) {\n    const { wallet, getWallet } = useWallet();\n    const { cluster, getConnection } = useCluster();\n\n    let gf: any;\n    watch([wallet, cluster], async () => {\n      gf = await initGemFarm(getConnection(), getWallet()!);\n    });\n\n    //needed coz mounts later\n    onMounted(async () => {\n      if (getWallet() && getConnection()) {\n        gf = await initGemFarm(getConnection(), getWallet()!);\n      }\n    });\n\n    // --------------------------------------- update farm\n    const manager = ref<string>();\n    const minStakingPeriodSec = ref<string>();\n    const cooldownPeriodSec = ref<string>();\n    const unstakingFeeLamp = ref<string>();\n\n    const updateFarm = async () => {\n      let newConfig;\n      if (\n        minStakingPeriodSec.value ||\n        cooldownPeriodSec.value ||\n        unstakingFeeLamp.value\n      ) {\n        newConfig = {\n          minStakingPeriodSec: new BN(minStakingPeriodSec.value!),\n          cooldownPeriodSec: new BN(cooldownPeriodSec.value!),\n          unstakingFeeLamp: new BN(unstakingFeeLamp.value!),\n        };\n      }\n\n      await gf.updateFarmWallet(\n        new PublicKey(props.farm!),\n        newConfig,\n        manager.value ? new PublicKey(manager.value) : undefined\n      );\n      ctx.emit('update-farm');\n    };\n\n    return {\n      manager,\n      minStakingPeriodSec,\n      cooldownPeriodSec,\n      unstakingFeeLamp,\n      updateFarm,\n    };\n  },\n});\n"],"sourceRoot":""}]}